"use strict";(globalThis.webpackChunkmy_website=globalThis.webpackChunkmy_website||[]).push([[2163],{3684:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/arquitetura-61450e4ae263c83caa01875a4d902479.png"},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var r=i(6540);const s={},t=r.createContext(s);function a(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(t.Provider,{value:n},e.children)}},8795:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"SystemInformation/architecture","title":"Architecture","description":"System overview","source":"@site/docs/SystemInformation/architecture.md","sourceDirName":"SystemInformation","slug":"/SystemInformation/architecture","permalink":"/microsite/docs/SystemInformation/architecture","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"System Information","permalink":"/microsite/docs/category/system-information"},"next":{"title":"Functional Requirements","permalink":"/microsite/docs/SystemInformation/functional_requirements"}}');var s=i(4848),t=i(8453);const a={sidebar_position:1},o="Architecture",c={},l=[{value:"System overview",id:"system-overview",level:2},{value:"Frontend Architecture",id:"frontend-architecture",level:2},{value:"<u>Administrator Portal</u>",id:"administrator-portal",level:4},{value:"<u>User Dashboard</u>",id:"user-dashboard",level:4},{value:"Backend Microservices Architecture",id:"backend-microservices-architecture",level:2},{value:"<u>Data Ingestion Service</u>",id:"data-ingestion-service",level:4},{value:"<u>Processing Pipeline</u>",id:"processing-pipeline",level:4},{value:"<u>Alert Engine</u>",id:"alert-engine",level:4},{value:"<u>Analytics Service</u>",id:"analytics-service",level:4},{value:"<u>User Management Service</u>",id:"user-management-service",level:4},{value:"<u>Administration Service</u>",id:"administration-service",level:4},{value:"<u>Audit Service</u>",id:"audit-service",level:4},{value:"<u>Export Service</u>",id:"export-service",level:4},{value:"Raspberry Backend",id:"raspberry-backend",level:2},{value:"<u>Sensor data aggregation</u>",id:"sensor-data-aggregation",level:4},{value:"<u>Sensor management</u>",id:"sensor-management",level:4},{value:"<u>Data collection/processing</u>",id:"data-collectionprocessing",level:4},{value:"<u>Data marshalling and dispatching</u>",id:"data-marshalling-and-dispatching",level:4}];function d(e){const n={h1:"h1",h2:"h2",h4:"h4",header:"header",img:"img",li:"li",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"architecture",children:"Architecture"})}),"\n",(0,s.jsx)(n.h2,{id:"system-overview",children:"System overview"}),"\n",(0,s.jsx)(n.p,{children:"The proposed system architecture implements a comprehensive biomechanical monitoring solution supporting six distinct user interfaces, one web application, and one Raspberry Pi server deployment. The design follows a microservices pattern to ensure scalability, maintainability, and clear separation of concerns across functional domains."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"image",src:i(3684).A+"",width:"1406",height:"1161"})}),"\n",(0,s.jsx)(n.h2,{id:"frontend-architecture",children:"Frontend Architecture"}),"\n",(0,s.jsx)(n.p,{children:"The frontend architecture provides differentiated user experiences based on role-based access control, implementing two primary application modes:"}),"\n",(0,s.jsx)(n.h4,{id:"administrator-portal",children:(0,s.jsx)("u",{children:"Administrator Portal"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"System Monitoring Interface: Real-time dashboard displaying system health metrics \u2013 such as sensor live battery, service status, and operational analytics"}),"\n",(0,s.jsx)(n.li,{children:"Data Export Interface: Tools for generating and exporting reports in PDF, CSV, and JSON formats with comparative analysis capabilities"}),"\n",(0,s.jsx)(n.li,{children:"User Management Interface: User account administration including creation, modification, deactivation, and role assignment"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"user-dashboard",children:(0,s.jsx)("u",{children:"User Dashboard"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Real-time Monitoring Interface: Live data visualization and feedback during suit operation with immediate posture and movement analysis"}),"\n",(0,s.jsx)(n.li,{children:"Historical Analytics Interface: Longitudinal data review with trend analysis, performance metrics, and progress tracking over time"}),"\n",(0,s.jsx)(n.li,{children:"Profile Management Interface: Personal account configuration, and preference management"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"backend-microservices-architecture",children:"Backend Microservices Architecture"}),"\n",(0,s.jsx)(n.h4,{id:"data-ingestion-service",children:(0,s.jsx)("u",{children:"Data Ingestion Service"})}),"\n",(0,s.jsx)(n.p,{children:"Purpose: Handles data acquisition dumped to the main application\u2019s backend when the user connects to the raspberry\u2019s server"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Data Validation & Sanitization: Ensures data integrity and compliance with expected formats"}),"\n",(0,s.jsx)(n.li,{children:"Data storing: When the user connects to the raspberry\u2019s server, the data on the time-series DB on the raspberry is dumped to the application\u2019s backend running on the user\u2019s machine, which is then saved to the application\u2019s main time-series DB to ensure no data is lost"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"processing-pipeline",children:(0,s.jsx)("u",{children:"Processing Pipeline"})}),"\n",(0,s.jsx)(n.p,{children:"Purpose: Transforms raw sensor data into actionable biomechanical insights"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Sensor Fusion Service: Correlates and synthesizes data from multiple sensor inputs"}),"\n",(0,s.jsx)(n.li,{children:"Posture Classification Service: Identifies and categorizes user postures (further down the line ML could be implemented here)"}),"\n",(0,s.jsx)(n.li,{children:"Fatigue Analysis Service: Detects fatigue patterns"}),"\n",(0,s.jsx)(n.li,{children:"Movement Pattern Recognition: Analysis and recognition of repetitive user movements"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"alert-engine",children:(0,s.jsx)("u",{children:"Alert Engine"})}),"\n",(0,s.jsx)(n.p,{children:"Purpose: Monitors user data streams and triggers appropriate notifications"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Rule Manager: Configures and maintains alert criteria and business rules"}),"\n",(0,s.jsx)(n.li,{children:"Threshold Calculator: Dynamically adjusts alert thresholds based on individual user baselines (stored on the document-oriented DB)"}),"\n",(0,s.jsx)(n.li,{children:"Notification Dispatcher: Coordinates delivery of alerts across supported platforms"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"analytics-service",children:(0,s.jsx)("u",{children:"Analytics Service"})}),"\n",(0,s.jsx)(n.p,{children:"Purpose: Provides business intelligence and reporting capabilities"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Trend Analysis: Identifies patterns and correlations in user data over time"}),"\n",(0,s.jsx)(n.li,{children:"Statistical Aggregation: Computes summary statistics and performance metrics"}),"\n",(0,s.jsx)(n.li,{children:"Report Generator: Creates structured reports for both individual and comparative analysis"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"user-management-service",children:(0,s.jsx)("u",{children:"User Management Service"})}),"\n",(0,s.jsx)(n.p,{children:"Purpose: Manages user identities, authentication, and authorization"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Authentication Service: Handles user login, session management, and security tokens"}),"\n",(0,s.jsx)(n.li,{children:"Profile Manager: Maintains user preferences, historical data, and personal configurations"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"administration-service",children:(0,s.jsx)("u",{children:"Administration Service"})}),"\n",(0,s.jsx)(n.p,{children:"Purpose: Provides system administration and operational oversight"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"User management: Administrative operations for user accounts with bulk processing capabilities"}),"\n",(0,s.jsx)(n.li,{children:"System management: Aggregates operational metrics, service health status, and usage statistics"}),"\n",(0,s.jsx)(n.li,{children:"Role-Based Access Control: Enforces permission policies and administrative privilege management"}),"\n",(0,s.jsx)(n.li,{children:"Administrative operations: System configuration, maintenance controls, and global settings management"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"audit-service",children:(0,s.jsx)("u",{children:"Audit Service"})}),"\n",(0,s.jsx)(n.p,{children:"Purpose: Maintains comprehensive activity logs for security and compliance\nActivity Logger: Captures user actions, system events, and data access patterns\nLog Query Engine: Provides filtered search, aggregation, and retrieval of audit records\nCompliance Exporter: Generates audit trails for regulatory and security reviews\nRetention Policy Manager: Automates log lifecycle management and archival processes"}),"\n",(0,s.jsx)(n.h4,{id:"export-service",children:(0,s.jsx)("u",{children:"Export Service"})}),"\n",(0,s.jsx)(n.p,{children:"Purpose: Handles data export and comparative reporting functionality"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Report Generator: Creates customized reports for users, periods, and system metrics"}),"\n",(0,s.jsx)(n.li,{children:"Data Formatter: Transforms data into required formats (PDF, CSV, JSON) with appropriate styling"}),"\n",(0,s.jsx)(n.li,{children:"Comparison Engine: Performs statistical comparisons between users and time periods"}),"\n",(0,s.jsx)(n.li,{children:"Batch Export Processor: Manages asynchronous export jobs with progress tracking"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"raspberry-backend",children:"Raspberry Backend"}),"\n",(0,s.jsx)(n.p,{children:"The Raspberry Pi serves as the computing hub that interfaces directly with wearable sensors, providing real-time data acquisition and preprocessing. This edge layer ensures low-latency processing and operational resilience even during network interruptions."}),"\n",(0,s.jsx)(n.h4,{id:"sensor-data-aggregation",children:(0,s.jsx)("u",{children:"Sensor data aggregation"})}),"\n",(0,s.jsx)(n.p,{children:"Purpose: Unifies heterogeneous sensor data streams into standardized, time-synchronized packets for efficient storage."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Buffer Management: Implements circular buffers for temporary data storage during network latency periods"}),"\n",(0,s.jsx)(n.li,{children:"Time-Synchronization Engine: Aligns timestamps across all sensor sources using hardware clock synchronization"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"sensor-management",children:(0,s.jsx)("u",{children:"Sensor management"})}),"\n",(0,s.jsx)(n.p,{children:"Purpose: Provides comprehensive lifecycle management and monitoring of all connected sensor hardware."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Sensor Discovery & Registration: Interface to add and authenticate new sensors"}),"\n",(0,s.jsx)(n.li,{children:"Configuration Manager: Pushes calibration parameters and operational settings to individual sensors"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"data-collectionprocessing",children:(0,s.jsx)("u",{children:"Data collection/processing"})}),"\n",(0,s.jsx)(n.p,{children:"Purpose: Executes essential data preprocessing and quality assurance to reduce application\u2019s processing load and ensure data integrity."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Raw Data Acquisition: Interfaces with sensor drivers to collect raw biomechanical measurements"}),"\n",(0,s.jsx)(n.li,{children:"Signal Preprocessing: Applies noise filtering, outlier detection, and signal normalization algorithms"}),"\n",(0,s.jsx)(n.li,{children:"Data Quality Validation: Implements sanity checks and validation rules to flag corrupted or implausible readings"}),"\n",(0,s.jsx)(n.li,{children:"Local Data Caching: Stores processed data in a time-series DB to ensure no data is lost. This data is then dumped to the user when they connect to the raspberry\u2019s server"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"data-marshalling-and-dispatching",children:(0,s.jsx)("u",{children:"Data marshalling and dispatching"})}),"\n",(0,s.jsx)(n.p,{children:"Purpose: Provides real-time data streaming and protocol transformation for direct client connections, enabling immediate feedback to users during suit operation."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Multi-Format Marshalling: Converts internal data structures to the correct data format ready to be sent to the client"}),"\n",(0,s.jsx)(n.li,{children:"Payload Optimization: Minimizes data payload size while preserving critical biomechanical information"}),"\n",(0,s.jsx)(n.li,{children:"Type Validation: Ensures data integrity during format transformation processes"}),"\n",(0,s.jsx)(n.li,{children:"WebSocket Server: Maintains persistent, full-duplex connections with connected clients"}),"\n",(0,s.jsx)(n.li,{children:"Session Authentication: Validates user credentials and establishes secure communication channels"}),"\n",(0,s.jsx)(n.li,{children:"Heartbeat Monitoring: Implements keep-alive mechanisms to detect and clean up stale connections"}),"\n",(0,s.jsx)(n.li,{children:"Quality-of-Service Tiers: Provides differentiated data streaming rates based on network conditions"}),"\n",(0,s.jsx)(n.li,{children:"Backpressure Handling: Manages data flow control when clients experience processing bottlenecks"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);